apiVersion: v1
kind: Service
metadata:
  name: mysqlsrv  # DNS name 
  labels:
    app: usersapp
    component: mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod should contain same labels
    app: usersapp
    component: mysql
  clusterIP: None  # We Use DNS, so clusterIP is not relevant
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: usersapp
    component: mysql
spec:
  selector: # mysql Pod should contain same labels 
    matchLabels:
      app: usersapp
      component: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Pod's labels - must match 'Service' and 'Deployment' selectors
        app: usersapp
        component: mysql
    spec:
      containers:
      - image: mysql:5.7
        args:
          - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
        name: mysql 
        env:
        - name: MYSQL_ROOT_PASSWORD 
          valueFrom:
            secretKeyRef:
              name: db-root-credentials 
              key: password
        - name: MYSQL_USER 
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: MYSQL_PASSWORD 
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: MYSQL_DATABASE 
          valueFrom:
            configMapKeyRef:
              name: db-conf
              key: name
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:        
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc